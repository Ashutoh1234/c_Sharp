on click call partial view

 <button class="btn btn-default" href="#" type="button" onclick="location.href='@Url.Action("Registration", "Registration")'">Submit</button>

  <div>
                        <button type="button" data-toggle="modal" data-target="#modal-Add-User" class="btn btn-primary pull-right">
                            Create User
                        </button>
                    </div>


<div id="modal-Add-User" class="modal fade" role="dialog" data-controller="Establishment" data-parsley-validate data-action="CreateUser">
    @Html.Partial("PartialViews/_AddUser", Model)
</div>






                                               ajax call of function



<script type="text/javascript">
    $(function () {
        $("#btnGet").click(function () {
            alert('Hello');
            $.ajax({
                type: "POST",
                url: "/Establishment/UpdateUser",
                data: '{status_cd: "' + $("#I").val() + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    alert('Wrong');
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    });
</script>






function UpdateStatusAct(userID) {
    debugger;
    var $container = $('#modal-Up-User');
    var data = {
        status_cd: "A",
        user_id: userID

    };
    debugger;
    var controller = "Establishment";
    
    
    
                                                                     Email Service
    
    
    
    
     [HttpPost]
        public ActionResult SendEmail(string receiver, string subject, string message)
        {
            try
            {
                if (ModelState.IsValid)
                {
                    var senderEmail = new MailAddress("jamilmoughal786@gmail.com", "Jamil");
                    var receiverEmail = new MailAddress(receiver, "Receiver");
                    var password = "Your Email Password here";
                    var sub = subject;
                    var body = message;
                    var smtp = new SmtpClient
                    {
                        Host = "smtp.gmail.com",
                        Port = 587,
                        EnableSsl = true,
                        DeliveryMethod = SmtpDeliveryMethod.Network,
                        UseDefaultCredentials = false,
                        Credentials = new NetworkCredential(senderEmail.Address, password)
                    };
                    using (var mess = new MailMessage(senderEmail, receiverEmail)
                    {
                        Subject = subject,
                        Body = body
                    })
                    {
                        smtp.Send(mess);
                    }
                    return View();
                }
            }
            catch (Exception)
            {
                ViewBag.Error = "Some Error";
            }
            return View();
        }
    var action = "UpdateUser";
    var URL = "../" + controller + "/" + action;

    ajaxPOST(URL, data, function (data) {
        if (!isJson(data)) {
            swal("Failure", "Create User Failed...", "warning");
        }
        else {
            $('#modal-Up-User').modal('toggle');
            ResetFields('#modal-Up-User');
            swal("Success", "Changes made successfully.", "success");
        }
    });
}







 <script>
        function myfun() {
            debugger;


            var Email = document.getElementById('Email').value;
            var ConfirmEmail = document.getElementById('ConfirmEmail').value;

            if (Email != ConfirmEmail) {
                swal("Failure", "Email Not Matched with Confirm Email", "warning");
                return false;
            }

            var Password = document.getElementById('Password').value;
            var ConfirmPassword = document.getElementById('ConfirmPassword').value;
            if (Password != ConfirmPassword) {
                swal("Failure", "Password Not Matched with Confirm Password", "warning");
                return false;
            }
        }

    </script>











                                                   Consume Post API
                                                   
                                                   
       public async Task<IActionResult> Index(Users user)
           {

            int ID;
            DataTable responseObj = new DataTable();
            using (var client = new HttpClient())
            {
                client.BaseAddress = new Uri("http://localhost:7121/");
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                HttpResponseMessage response = new HttpResponseMessage();
                response = await client.PostAsJsonAsync("api/CreateUser", user).ConfigureAwait(false);


                if (response.IsSuccessStatusCode)
                {
                    string result = response.Content.ReadAsStringAsync().Result;
                    Users usr = new Users();
                    usr = JsonConvert.DeserializeObject<Users>(result);
                    ID = usr.ID;
                    TempData["ID"] = ID;
                }
            }
            return RedirectToAction("Registration");
        }
